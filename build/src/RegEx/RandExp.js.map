{"version":3,"file":"RandExp.js","sourceRoot":"","sources":["../../../src/RegEx/RandExp.ts"],"names":[],"mappings":";;AAAA,qCAAkC;AAClC,sCAAuC;AAEvC,MAAM,OAAO;IAED;IADV,YACU,KAAwB;QAAxB,UAAK,GAAL,KAAK,CAAmB;IAC/B,CAAC;IAKJ,QAAQ,CAAC,CAAU;QACjB,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtE,MAAM,EAAE,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAA,iBAAO,EAAC,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,YAAY;YAAE,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,kBAAe,OAAO,CAAC","sourcesContent":["import { randexp } from 'randexp';\nimport { pickRandom } from '../Arrays';\n\nclass RandExp {\n  constructor(\n    private regex: RegExp | RegExp[],\n  ) {}\n\n  generate(n?: undefined): string\n  generate(n: number): string[]\n  generate(n?: number): string | string[]\n  generate(n?: number): string | string[] {\n    const isUndefParam = !!(!n && n !== 0);\n\n    const regExps = Array.isArray(this.regex) ? this.regex : [this.regex];\n    const ra = pickRandom(regExps);\n    const data = [...Array(Math.max(n || 1, 1))].map(() => randexp(ra));\n    if (isUndefParam) return data[0];\n    return data;\n  }\n}\n\nexport default RandExp;\n"]}