{"version":3,"file":"dbFuncs.js","sourceRoot":"","sources":["../../../src/DB/dbFuncs.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAEH,2DAK4B;AAE5B;;;;;;;;;;;GAWG;AACH,SAAgB,uBAAuB,CAAC,YAA0B;IAChE,MAAM,WAAW,GAAc,EAAE,CAAC;IAClC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACtC,WAAW,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,KAAK,8BAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAND,0DAMC;AAED;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,qBAAqB,CAAC,OAAsB;IAC1D,MAAM,WAAW,GAAc,EAAE,CAAC;IAClC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACpB,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAND,sDAMC;AAED;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,yBAAyB,CAAC,OAAsB;IAC9D,MAAM,WAAW,GAAiB,EAAE,CAAC;IACrC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACpB,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,8BAAS,CAAC,IAAI,CAAC,CAAC,CAAC,8BAAS,CAAC,GAAG,CAAC;IAC9D,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC;AAND,8DAMC","sourcesContent":["/**\n * MongoDB utility functions\n * @module MongoDBUtils\n * @category DB\n */\n\nimport {\n  SortTypes,\n  MongooseSort,\n  MongoSort,\n  ServerSorting,\n} from 'lullo-common-types';\n\n/**\n * Converts a Mongoose sort object to the Mongo sort object\n * @param mongooseSort\n *\n * @example\n *\n * //Input :\n * {test: 'asc', val: 'desc'}\n *\n * // Output:\n * {test: 1, val: -1}\n */\nexport function mongooseSortToMongoSort(mongooseSort: MongooseSort): MongoSort {\n  const convertSort: MongoSort = {};\n  Object.keys(mongooseSort).forEach((k) => {\n    convertSort[k] = mongooseSort[k] === SortTypes.asc ? 1 : -1;\n  });\n  return convertSort;\n}\n\n/**\n * Converts the FrontEnd sortType to the Mongo sort object\n * @param srvSort\n *\n * @example\n *\n * //Input :\n * [\n *  {id: 'ref', desc: true},\n *  {id: 'test', desc: false},\n * ]\n *\n * // Output:\n * {\n *  ref: -1,\n *  test: 1,\n * }\n */\nexport function serverSortToMongoSort(srvSort: ServerSorting): MongoSort {\n  const convertSort: MongoSort = {};\n  srvSort.forEach((s) => {\n    convertSort[s.id] = s.desc ? -1 : 1;\n  });\n  return convertSort;\n}\n\n/**\n * Converts the FrontEnd sortType to the Mongooose sort object\n * @param srvSort\n *\n * @example\n *\n * //Input :\n * [\n *  {id: 'ref', desc: true},\n *  {id: 'test', desc: false},\n * ]\n *\n * // Output:\n * {\n *  ref: 'desc',\n *  test: 'asc',\n * }\n */\nexport function serverSortToMongoosseSort(srvSort: ServerSorting): MongooseSort {\n  const convertSort: MongooseSort = {};\n  srvSort.forEach((s) => {\n    convertSort[s.id] = s.desc ? SortTypes.desc : SortTypes.asc;\n  });\n  return convertSort;\n}\n"]}