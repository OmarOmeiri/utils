{"version":3,"file":"getStoreIdInDbQuery.js","sourceRoot":"","sources":["../../../src/DB/getStoreIdInDbQuery.ts"],"names":[],"mappings":";;AAAA,0BAA2C;AAC3C,wDAAyD;AAEzD;;;;GAIG;AACH,SAAS,mBAAmB,CAAC,KAA+D;IAC1F,MAAM,KAAK,GAAG,IAAA,6BAAe,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAChD,IAAI,CAAC,KAAK;QAAE,OAAO,GAAG,CAAC;IACvB,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAE5C,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,yBAAqB,CAA4B,CAAC;IACnG,IAAI,YAAY;QAAE,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;IACzC,OAAO,GAAG,CAAC;AACb,CAAC;AAED,kBAAe,mBAAmB,CAAC","sourcesContent":["import { objectIdInStringRegex } from '..';\nimport { valueByProperty } from '../Objects/objectFuncs';\n\n/**\n * Finds the storeId in a DB query\n * @param query\n * @returns\n */\nfunction getStoreIdInDbQuery(query: Record<string, unknown> | Array<Record<string, unknown>>): string {\n  const found = valueByProperty(query, 'storeId');\n  if (!found) return '0';\n  if (typeof found === 'string') return found;\n\n  const storeIdMatch = JSON.stringify(found).match(objectIdInStringRegex) as RegExpMatchArray | null;\n  if (storeIdMatch) return storeIdMatch[0];\n  return '0';\n}\n\nexport default getStoreIdInDbQuery;\n"]}