{"version":3,"file":"extends.js","sourceRoot":"","sources":["../../jest/extends.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable require-jsdoc */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { isEqual } from 'lodash';\n\n// @ts-ignore\nglobal.fail = (\n  expected: any,\n  received?: any,\n  message?: string,\n): void => {\n  if (!received && received !== false) throw new Error(`\\x1b[31m${expected}\\x1b[0m`);\n  throw new Error(`\\x1b[31m\nExpected: ${expected}\nReceived: ${received}\n${message ? `Message: ${message}` : ''}\n\\x1b[0m`);\n};\n\nconst handleError = ({\n  name,\n  errors,\n  failPct,\n  canFailPct,\n  passIfOnePasses,\n  debug,\n  times,\n  passes,\n  stopOnFail,\n}: {\n  name: string,\n  times: number,\n  canFailPct: number,\n  passIfOnePasses?: boolean,\n  passes: number[]\n  errors: [number, any][],\n  failPct: number,\n  debug?: boolean,\n  stopOnFail?: boolean,\n}) => {\n  if (passIfOnePasses && passes.length) return;\n\n  if (errors.length && failPct > (canFailPct ?? 0)) {\n    if (debug) {\n      throw new Error(`\n${stopOnFail === true ? '\\x1b[31mTest stopped on first failure\\x1b[0m\\n' : ''}\nTest: ${name}\nRan: ${times} times\nFailures: \\x1b[31m${errors.length}\\x1b[0m\nPasses: \\x1b[32m${passes.length}\\x1b[0m\nFail rate: \\x1b[31m${failPct * 100}%\\x1b[0m\n${canFailPct ? `Failed more than the ${canFailPct * 100}% limit` : ''}\\n\nErrors:\n${errors.map((e) => `RUN: ${e[0]}\\n${e[1].message}`).join('\\n\\n')}\n`);\n    } else {\n      throw new Error(`\n${stopOnFail === true ? '\\x1b[31mTest stopped on first failure\\x1b[0m\\n' : ''}\nTest: ${name}\nRan: ${times} times\nFailures: \\x1b[31m${errors.length}\\x1b[0m\nPasses: \\x1b[32m${passes.length}\\x1b[0m\nFail rate: \\x1b[31m${failPct * 100}%\\x1b[0m\n${canFailPct ? `Failed more than the ${canFailPct * 100}% limit` : ''}\\n\nLast error:\n${errors[errors.length - 1][1]}\\n\n\\x1b[0mYou can pass the \\x1b[1;33m\\`debug: true\\`\\x1b[0m option to see all errors.\n`);\n    }\n  }\n};\n\nconst repeatTest = async (\n  options: jest.RepeatWithCanFail | jest.RepeatWithPass | jest.RepeatWithDefaults,\n  name: string,\n  fn?: jest.ProvidesCallback,\n  timeout?: number,\n) => {\n  if (options.canFailPct && (options.canFailPct < 0 || options.canFailPct > 1)) {\n    throw new Error('`canFailPct` must be between 0 and 1');\n  }\n\n  const passes: number[] = [];\n  const errors: [number, any][] = [];\n\n  return test(`${name} \\x1b[33m*Repeat: ${options.times}*\\x1b[1;32m`, async () => {\n    let runCount = 0;\n    for await (const i of [...Array(options.times).keys()]) {\n      runCount += 1;\n      try {\n        if (fn) {\n          // @ts-ignore\n          await fn();\n          passes.push(i);\n        }\n      } catch (error) {\n        errors.push([i, error.stack ?? error.toString()]);\n        if (options.stopOnFail) break;\n      }\n    }\n    const failPct = errors.length / runCount;\n\n    handleError({\n      name,\n      errors,\n      failPct,\n      canFailPct: options.canFailPct ?? 0,\n      passIfOnePasses: options.passIfOnePasses,\n      debug: options.debug,\n      times: runCount,\n      passes,\n      stopOnFail: options.stopOnFail,\n    });\n  }, timeout);\n};\n\nconst repeatTestOnly = async (\n  options: jest.RepeatWithCanFail | jest.RepeatWithPass | jest.RepeatWithDefaults,\n  name: string,\n  fn?: jest.ProvidesCallback,\n  timeout?: number,\n) => {\n  if (options.canFailPct && (options.canFailPct < 0 || options.canFailPct > 1)) {\n    throw new Error('`canFailPct` must be between 0 and 1');\n  }\n\n  const passes: number[] = [];\n  const errors: [number, any][] = [];\n\n  return test.only(`${name} \\x1b[33m*Repeat: ${options.times}*\\x1b[1;32m`, async () => {\n    let runCount = 0;\n    for await (const i of [...Array(options.times).keys()]) {\n      runCount += 1;\n      try {\n        if (fn) {\n          // @ts-ignore\n          await fn();\n          passes.push(i);\n        }\n      } catch (error) {\n        errors.push([i, error.stack ?? error.toString()]);\n        if (options.stopOnFail) break;\n      }\n    }\n    const failPct = errors.length / runCount;\n\n    handleError({\n      name,\n      errors,\n      failPct,\n      canFailPct: options.canFailPct ?? 0,\n      passIfOnePasses: options.passIfOnePasses,\n      debug: options.debug,\n      times: runCount,\n      passes,\n      stopOnFail: options.stopOnFail,\n    });\n  }, timeout);\n};\n\ntest.repeats = repeatTest;\ntest.only.repeats = repeatTestOnly;\nit.repeats = repeatTest;\nit.only.repeats = repeatTestOnly;\n\n/**\n * Extends the Jest matcher interface with a array includes matcher.\n * @param received\n * @returns\n */\nfunction toBeIncludedIn<T>(this: jest.MatcherUtils, received: any, expected: Array<T>): jest.CustomMatcherResult {\n  if (!Array.isArray(received)) {\n    const pass = expected.includes(received);\n    return {\n      message: () => `\\x1b[31m\n  Expected: [\\n\\t${expected.join(',\\n\\t')}\\n]\n  Received: ${received.toString()}\n  \\x1b[0m`,\n      pass,\n    };\n  }\n\n  const pass = expected.every((e) => received.includes(e));\n  const shouldNotBeIncluded = received.filter((e) => !expected.includes(e));\n\n  return {\n    message: () => `\\x1b[31m\nReceived: [\\n\\t${received.join(',\\n\\t')}\\n]\nExpected: [\\n\\t${expected.join(',\\n\\t')}\\n]\n${shouldNotBeIncluded.length ? `Should NOT be included: [\\n\\t${shouldNotBeIncluded.join(',\\n\\t')}\\n]` : ''}\n\\x1b[0m`,\n    pass,\n  };\n}\n\n/**\n * Extends the Jest matcher interface with a array includes matcher.\n * @param received\n * @returns\n */\nfunction toInclude(this: jest.MatcherUtils, received: any, expected: Primitives): jest.CustomMatcherResult {\n  if (!Array.isArray(received)) throw new Error('`toInclude` can only be used with arrays');\n\n  const pass = received.includes(expected);\n\n  return {\n    message: () => `\\x1b[31m\nReceived: [\\n\\t${received.join(',\\n\\t')}\\n]\nExpected: ${expected.toString()} to be in the array\n\\x1b[0m`,\n    pass,\n  };\n}\n\n/**\n * Extends the Jest matcher interface with a number close to.\n * @param expected [number, number] [The number, plusOrMinus]\n * @returns\n */\nfunction toBeInRange(this: jest.MatcherUtils, received: any, expected: [number, number]): jest.CustomMatcherResult {\n  const number = expected[0];\n  const plusOrMinus = Math.abs(expected[1]);\n  const pass = Math.abs(received - number) <= plusOrMinus;\n\n  return {\n    message: () => `\\x1b[31m\nReceived: ${received}\nExpected: ${received} to be between ${number - plusOrMinus} and ${number + plusOrMinus}\n\\x1b[0m`,\n    pass,\n  };\n}\n\n/**\n * Extends the Jest matcher interface with a type assertion\n * @param received\n * @returns\n */\nfunction toHaveType<T>(this: jest.MatcherUtils, received: any, expected: 'date' | 'string' | 'boolean' | 'number' | 'array' | 'object' | 'buffer'): jest.CustomMatcherResult {\n  let pass = false;\n\n  if (expected === 'buffer') pass = Buffer.isBuffer(received);\n  if (expected === 'date') pass = received instanceof Date;\n  if (expected === 'string') pass = typeof received === 'string';\n  if (expected === 'boolean') pass = typeof received === 'boolean';\n  if (expected === 'number') pass = typeof received === 'number';\n  if (expected === 'array') pass = Array.isArray(received);\n  if (expected === 'object') pass = (typeof received === 'object' && received !== null);\n\n  const receivedType = received === null\n    ? 'null'\n    : received instanceof Date\n      ? 'Date'\n      : Array.isArray(received)\n        ? 'Array'\n        : typeof received;\n\n  return {\n    message: () => `\\x1b[31m\nExpected: ${expected}\nReceived: ${receivedType}\n\\x1b[0m`,\n    pass,\n  };\n}\n\n/**\n * Extends the Jest matcher interface with a array includes matcher.\n * @param received\n * @returns\n */\nfunction twoWayIncludes<T extends Primitives>(this: jest.MatcherUtils, received: any, expected: Array<T>): jest.CustomMatcherResult {\n  if (!Array.isArray(received)) {\n    return {\n      message: () => `\\x1b[31m\n  Expected: [\\n\\t${expected.join(',\\n\\t')}\\n]\n  Received: ${received.toString()}\n  \\x1b[0m`,\n      pass: false,\n    };\n  }\n\n  const pass = expected.every((e) => received.includes(e)) && received.every((e) => expected.includes(e));\n  const shouldBeIncluded = expected.filter((e) => !received.includes(e));\n  const shouldNotBeIncluded = received.filter((e) => !expected.includes(e));\n\n  return {\n    message: () => `\\x1b[31m\nReceived: [\\n\\t${received.join(',\\n\\t')}\\n]\nExpected: [\\n\\t${expected.join(',\\n\\t')}\\n]\n${shouldBeIncluded.length ? `Should be Included: [\\n\\t${shouldBeIncluded.join(',\\n\\t')}\\n]` : ''}\n${shouldNotBeIncluded.length ? `Should NOT be included: [\\n\\t${shouldNotBeIncluded.join(',\\n\\t')}\\n]` : ''}\n\\x1b[0m`,\n    pass,\n  };\n}\n\nfunction toHaveLengthGtThan(this: jest.MatcherUtils, received: any, expected:number) {\n  if (!Array.isArray(received)) {\n    return {\n      message: () => `\\x1b[31m\n  Expected value to be instance of Array.\n  Received: ${received.toString()}\n  \\x1b[0m`,\n      pass: false,\n    };\n  }\n\n  const pass = received.length > expected;\n\n  return {\n    message: () => `\\x1b[31m\nExpected: Array to have length greater than: ${expected}\nReceived: ${received.length.toString()}\n\\x1b[0m`,\n    pass,\n  };\n}\n\nfunction toHaveLengthLtThan(this: jest.MatcherUtils, received: any, expected:number) {\n  if (!Array.isArray(received)) {\n    return {\n      message: () => `\\x1b[31m\n  Expected value to be instance of Array.\n  Received: ${received.toString()}\n  \\x1b[0m`,\n      pass: false,\n    };\n  }\n\n  const pass = received.length < expected;\n\n  return {\n    message: () => `\\x1b[31m\nExpected: Array to have length less than: ${expected}\nReceived: ${received.length.toString()}\n\\x1b[0m`,\n    pass,\n  };\n}\n\nexpect.extend({\n  toBeIncludedIn,\n  toInclude,\n  twoWayIncludes,\n  toHaveType,\n  toHaveLengthGtThan,\n  toHaveLengthLtThan,\n  toBeInRange,\n});\n"]}